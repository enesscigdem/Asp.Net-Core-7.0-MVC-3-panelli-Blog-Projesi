@model EntityLayer.Concrete.Blog
@{
    ViewData["Title"] = "EditBlog";
    Layout = "WriterLayout";
}

<h1>Blog Düzenleme Sayfası</h1>
<br />
@using (Html.BeginForm("EditBlog", "Blog", FormMethod.Post))
{
    @Html.HiddenFor(x => x.BlogID)
    @Html.HiddenFor(x => x.BlogStatus)
    @Html.HiddenFor(x => x.BlogCreateDate)
    <br />
    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(x => x.BlogTitle, new { placeholder = "Başlık Giriniz..", @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle)
    <br />
    @Html.Label("Blog Küçük Görsel")
    @Html.TextBoxFor(x => x.BlogThumbnailImage, new { placeholder = "Küçük Görsel Seçiniz..", @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogThumbnailImage)
    <br />
    @Html.Label("Blog Görseli")
    @Html.TextBoxFor(x => x.BlogImage, new { placeholder = "Görsel Seçiniz..", @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogImage)
    <br />
    @Html.Label("Kategori")
    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.cv, new { @class = "form-control" })
    <br />
    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x => x.BlogContent, 15, 3, new { placeholder = "İçerik Giriniz..", @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogContent)
    <br />
    <button class="btn btn-success">Yazıyı Güncelle</button>
}
